use crate::bencode::{Token, Bencode, BencError};

grammar<'i>;

pub Benc: Bencode<'i> = {
    Str                   =>  Bencode::Str(<>),
    "i" <Num> "e"         =>  Bencode::Num(<>),
    "l" <Benc*> "e"       =>  Bencode::List(<>),
    "d" <(Str Benc)*> "e" =>? Bencode::decode_dict(<>),
}

extern {
    type Location = usize;
    type Error = BencError;

    enum Token<'i> {
        "i" => Token::I,
        "l" => Token::L,
        "d" => Token::D,
        "e" => Token::E,
        Num => Token::Num(<i64>),
        Str => Token::Str(<&'i str>),
    }
}
